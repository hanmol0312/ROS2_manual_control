// generated from rosidl_adapter/resource/action.idl.em
// with input from action_commands/action/Command.action
// generated code does not contain a copyright notice


module action_commands {
  module action {
    struct Command_Goal {
      @verbatim (language="comment", text=
        "time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        "Parameter 1, as defined by MAVLink uint16 VEHICLE_CMD enum.")
      float param1;

      @verbatim (language="comment", text=
        "Parameter 2, as defined by MAVLink uint16 VEHICLE_CMD enum.")
      float param2;

      @verbatim (language="comment", text=
        "Parameter 3, as defined by MAVLink uint16 VEHICLE_CMD enum.")
      float param3;

      @verbatim (language="comment", text=
        "Parameter 4, as defined by MAVLink uint16 VEHICLE_CMD enum.")
      float param4;

      @verbatim (language="comment", text=
        "Parameter 5, as defined by MAVLink uint16 VEHICLE_CMD enum.")
      double param5;

      @verbatim (language="comment", text=
        "Parameter 6, as defined by MAVLink uint16 VEHICLE_CMD enum.")
      double param6;

      @verbatim (language="comment", text=
        "Parameter 7, as defined by MAVLink uint16 VEHICLE_CMD enum.")
      float param7;

      @verbatim (language="comment", text=
        "Command ID")
      uint32 command;

      @verbatim (language="comment", text=
        "System which should execute the command")
      uint8 target_system;

      @verbatim (language="comment", text=
        "Component which should execute the command, 0 for all components")
      uint8 target_component;

      @verbatim (language="comment", text=
        "System sending the command")
      uint8 source_system;

      @verbatim (language="comment", text=
        "Component / mode executor sending the command")
      uint16 source_component;

      @verbatim (language="comment", text=
        "0: First transmission of this command. 1-255: Confirmation transmissions (e.g. for kill command)")
      uint8 confirmation;

      boolean from_external;
    };
    struct Command_Result {
      uint8 arming_state;

      uint8 nav_state;
    };
    struct Command_Feedback {
      uint8 arming_state_present;

      uint8 nav_state_present;
    };
  };
};
